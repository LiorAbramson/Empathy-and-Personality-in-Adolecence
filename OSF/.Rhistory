#planting Fisher Z results in a table
fishZ_table <- matrix(nrow=8,ncol=4)
fishZ_table[,1] <- c("Emotional empathic personality disposition 11","Emotional empathy 11",
"Emotional empathic personality disposition 13","Emotional empathy 13",
"Cognitive empathic personality disposition 11","Cognitive empathy 11",
"Cognitive empathic personality disposition 13","Cognitive empathy 13")
fishZ_table[1,2] <- paste(as.character(round(icc_PREDemo_DZS11$value,2)),"[",
as.character(round(icc_PREDemo_DZS11$lbound,2)),"-",
as.character(round(icc_PREDemo_DZS11$ubound,2)),"]")
fishZ_table[2,2] <- paste(as.character(round(icc_EMPemo_DZS11$value,2)),"[",
as.character(round(icc_EMPemo_DZS11$lbound,2)),"-",
as.character(round(icc_EMPemo_DZS11$ubound,2)),"]")
fishZ_table[3,2] <- paste(as.character(round(icc_PREDemo_DZS13$value,2)),"[",
as.character(round(icc_PREDemo_DZS13$lbound,2)),"-",
as.character(round(icc_PREDemo_DZS13$ubound,2)),"]")
fishZ_table[4,2] <- paste(as.character(round(icc_EMPemo_DZS13$value,2)),"[",
as.character(round(icc_EMPemo_DZS13$lbound,2)),"-",
as.character(round(icc_EMPemo_DZS13$ubound,2)),"]")
fishZ_table[5,2] <- paste(as.character(round(icc_PREDcog_DZS11$value,2)),"[",
as.character(round(icc_PREDcog_DZS11$lbound,2)),"-",
as.character(round(icc_PREDcog_DZS11$ubound,2)),"]")
fishZ_table[6,2] <- paste(as.character(round(icc_EMPcog_DZS11$value,2)),"[",
as.character(round(icc_EMPcog_DZS11$lbound,2)),"-",
as.character(round(icc_EMPcog_DZS11$ubound,2)),"]")
fishZ_table[7,2] <- paste(as.character(round(icc_PREDcog_DZS13$value,2)),"[",
as.character(round(icc_PREDcog_DZS13$lbound,2)),"-",
as.character(round(icc_PREDcog_DZS13$ubound,2)),"]")
fishZ_table[8,2] <- paste(as.character(round(icc_EMPcog_DZS13$value,2)),"[",
as.character(round(icc_EMPcog_DZS13$lbound,2)),"-",
as.character(round(icc_EMPcog_DZS13$ubound,2)),"]")
fishZ_table[1,3] <- paste(as.character(round(icc_PREDemo_DZO11$value,2)),"[",
as.character(round(icc_PREDemo_DZO11$lbound,2)),"-",
as.character(round(icc_PREDemo_DZO11$ubound,2)),"]")
fishZ_table[2,3] <- paste(as.character(round(icc_EMPemo_DZO11$value,2)),"[",
as.character(round(icc_EMPemo_DZO11$lbound,2)),"-",
as.character(round(icc_EMPemo_DZO11$ubound,2)),"]")
fishZ_table[3,3] <- paste(as.character(round(icc_PREDemo_DZO13$value,2)),"[",
as.character(round(icc_PREDemo_DZO13$lbound,2)),"-",
as.character(round(icc_PREDemo_DZO13$ubound,2)),"]")
fishZ_table[4,3] <- paste(as.character(round(icc_EMPemo_DZO13$value,2)),"[",
as.character(round(icc_EMPemo_DZO13$lbound,2)),"-",
as.character(round(icc_EMPemo_DZO13$ubound,2)),"]")
fishZ_table[5,3] <- paste(as.character(round(icc_PREDcog_DZO11$value,2)),"[",
as.character(round(icc_PREDcog_DZO11$lbound,2)),"-",
as.character(round(icc_PREDcog_DZO11$ubound,2)),"]")
fishZ_table[6,3] <- paste(as.character(round(icc_EMPcog_DZO11$value,2)),"[",
as.character(round(icc_EMPcog_DZO11$lbound,2)),"-",
as.character(round(icc_EMPcog_DZO11$ubound,2)),"]")
fishZ_table[7,3] <- paste(as.character(round(icc_PREDcog_DZO13$value,2)),"[",
as.character(round(icc_PREDcog_DZO13$lbound,2)),"-",
as.character(round(icc_PREDcog_DZO13$ubound,2)),"]")
fishZ_table[8,3] <- paste(as.character(round(icc_EMPcog_DZO13$value,2)),"[",
as.character(round(icc_EMPcog_DZO13$lbound,2)),"-",
as.character(round(icc_EMPcog_DZO13$ubound,2)),"]")
fishZ_table[1,4] <- round(fishZ_predEmo11$z,2)
fishZ_table[2,4] <- round(fishZ_empEmo11$z,2)
fishZ_table[3,4] <- round(fishZ_predEmo13$z,2)
fishZ_table[4,4] <- round(fishZ_empEmo13$z,2)
fishZ_table[5,4] <- round(fishZ_predCog11$z,2)
fishZ_table[6,4] <- round(fishZ_empCog11$z,2)
fishZ_table[7,4] <- round(fishZ_predCog13$z,2)
fishZ_table[8,4] <- round(fishZ_empCog13$z,2)
colnames(fishZ_table) <- c("variable","DZ-same sex", "DZ-opposite sex","Z value")
write.csv(fishZ_table, file= "fisherZ_DZ.csv", row.names = F)
fishZ_empEmo11
icc_EMPemo_DZS11
icc_PREDemo_DZS
icc_PREDemo_DZS11
icc_PREDemo_DZS11$subjects
icc_PREDemo_DZS11$value
icc_PREDcog_DZS13$value
icc_EMPcog_DZS13$value
icc_EMPcog_DZO13$value
#creating the matrix to store the data
col <- colnames(D)
relvar <- c(which (col=="EMPQ_emotional_11"),which(col=="EMPQ_cognitive_11"),
which(col=="predicted_emotional_11"), which(col=="predicted_cognitive_11"),
which (col=="EMPQ_emotional_13"),which(col=="EMPQ_cognitive_13"),
which(col=="predicted_emotional_13"), which(col=="predicted_cognitive_13"))
residvec <- paste0(colnames(D[,relvar]),"r")
resid.matrix <- as.data.frame(matrix(data= NA, nrow =nrow(D),ncol =length(relvar)))
colnames(resid.matrix) <-residvec
View(resid.matrix)
#creating the residual scores
for (i in 1:length(relvar)) {
reg <- lm(D[,relvar[i]]~sex, data=D, na.action=na.exclude)
resid.matrix[,i] <-resid(reg)
}
D <-cbind(D,resid.matrix)
DWide$zygosity_2G <- DWide$zygosity
DWide$zygosity_2G[DWide$zygosity==1] <-"MZ"
DWide$zygosity_2G[DWide$zygosity==2] <-"DZ"
DWide$zygosity_2G[DWide$zygosity==3] <-"DZ"
View(D)
View(DWide)
#Preparations
rm(list = ls()) # clean the global environment
cat ("\014")    #clean the R console
#Packages
packages <- c('broom','purrr','lsr','psych', 'apaTables', 'reshape','irr')
lapply(packages, require, character.only = TRUE)
#Import the file (D was created using 'the_empathic_personality_profiles.R' script)
D <- read.csv ("~/Documents/projects/Empathy-Personality-Adolecence/OSF/data/Dfinal_11_13.csv")
#build the variable indicating whether the participant was in one or two time points
#0= one time-point, 1=two time-points
D$whatStage <- 0
D$whatStage[is.na(D$EMPQ_emotional_11)== F &is.na(D$EMPQ_emotional_13)== F] <-1
#perform separate t-test for each study outcome
ttest_whatStage_emo11 <- t.test(EMPQ_emotional_11~whatStage, data=D)
ttest_whatStage_cog11 <- t.test(EMPQ_cognitive_11~whatStage, data=D)
ttest_whatStage_predemo11 <- t.test(predicted_emotional_11~whatStage, data=D)
ttest_whatStage_predcog11 <- t.test(predicted_cognitive_11~whatStage, data=D)
ttest_whatStage_emo13 <- t.test(EMPQ_emotional_13~whatStage, data=D)
ttest_whatStage_cog13 <- t.test(EMPQ_cognitive_13~whatStage, data=D)
ttest_whatStage_predemo13 <- t.test(predicted_emotional_13~whatStage, data=D)
ttest_whatStage_predcog13 <- t.test(predicted_cognitive_13~whatStage, data=D)
#enter all tests in one table
ttest_attritionTable <- map_df(list(ttest_whatStage_predemo11,ttest_whatStage_emo11,
ttest_whatStage_predemo13,ttest_whatStage_emo13,
ttest_whatStage_predcog11,ttest_whatStage_cog11,
ttest_whatStage_predcog13,ttest_whatStage_cog13), tidy)
ttest_attritionTable_edit <- ttest_attritionTable[c("estimate1", "estimate2","statistic","parameter","p.value")]
colnames(ttest_attritionTable_edit) <- c("Mean one time-point","Mean both time-point", "t value","df","p-value")
ttest_attritionTable_edit[,1:4] <- round(ttest_attritionTable_edit[,1:4],2)
ttest_attritionTable_edit[,5]   <- round(ttest_attritionTable_edit[,5],3)
#add effect size
#change the direction according to the t-test results when relevant
#because the cohensD function does not show the effect's direction
ttest_attritionTable_edit$cohenD <- NA
ttest_attritionTable_edit$cohenD[1] <- round(cohensD(predicted_emotional_11~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[2] <- round(cohensD(EMPQ_emotional_11~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[3] <- 0-round(cohensD(predicted_emotional_13~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[4] <- 0-round(cohensD(EMPQ_emotional_13~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[5] <- 0-round(cohensD(predicted_cognitive_11~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[6] <- 0-round(cohensD(EMPQ_cognitive_11~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[7] <- 0-round(cohensD(predicted_cognitive_13~whatStage, data=D),2)
ttest_attritionTable_edit$cohenD[8] <- 0-round(cohensD(EMPQ_cognitive_13~whatStage, data=D),2)
#add sd
ttest_attritionTable_edit$sd1Stage <- NA
ttest_attritionTable_edit$sd2Stage <- NA
ttest_attritionTable_edit$sd1Stage[1] <- round((aggregate(D$predicted_emotional_11~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[2] <- round((aggregate(D$EMPQ_emotional_11~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[3] <- round((aggregate(D$predicted_emotional_13~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[4] <- round((aggregate(D$EMPQ_emotional_13~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[5] <- round((aggregate(D$predicted_cognitive_11~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[6] <- round((aggregate(D$EMPQ_cognitive_11~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[7] <- round((aggregate(D$predicted_cognitive_13~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd1Stage[8] <- round((aggregate(D$EMPQ_cognitive_13~D$whatStage, FUN = sd)[1,2]),2)
ttest_attritionTable_edit$sd2Stage[1] <- round((aggregate(D$predicted_emotional_11~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[2] <- round((aggregate(D$EMPQ_emotional_11~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[3] <- round((aggregate(D$predicted_emotional_13~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[4] <- round((aggregate(D$EMPQ_emotional_13~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[5] <- round((aggregate(D$predicted_cognitive_11~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[6] <- round((aggregate(D$EMPQ_cognitive_11~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[7] <- round((aggregate(D$predicted_cognitive_13~D$whatStage, FUN = sd)[2,2]),2)
ttest_attritionTable_edit$sd2Stage[8] <- round((aggregate(D$EMPQ_cognitive_13~D$whatStage, FUN = sd)[2,2]),2)
#adjust labels
ttest_attritionTable_edit$`Mean one time-point` <- paste(as.character(ttest_attritionTable_edit$`Mean one time-point`),"(",
as.character (ttest_attritionTable_edit$sd1Stage),")")
ttest_attritionTable_edit$`Mean both time-point` <- paste(as.character(ttest_attritionTable_edit$`Mean both time-point`),"(",
as.character (ttest_attritionTable_edit$sd2Stage),")")
ttest_attritionTable_edit$`t value` <- paste(as.character(ttest_attritionTable_edit$`t value`),"(",
as.character (ttest_attritionTable_edit$df),")")
df_attrition <- apply(ttest_attritionTable_edit[,c(1,2,3,6)],2,as.character)
#export table to csv
write.csv(df_attrition, file= "ttest_attritionTable.csv", row.names = F)
#perform separate t-test for each study outcome
ttest_sexPredemo11 <- t.test(predicted_emotional_11~sex, data=D)
ttest_sexEmpemo11 <-t.test(EMPQ_emotional_11~sex, data=D)
ttest_sexPredcog11 <- t.test(predicted_cognitive_11~sex, data=D)
ttest_sexEmpcog11 <- t.test(EMPQ_cognitive_11~sex, data=D)
ttest_sexPredemo13 <- t.test(predicted_emotional_13~sex, data=D)
ttest_sexEmpemo13 <-t.test(EMPQ_emotional_13~sex, data=D)
ttest_sexPredcog13 <- t.test(predicted_cognitive_13~sex, data=D)
ttest_sexEmpcog13 <- t.test(EMPQ_cognitive_13~sex, data=D)
#enter all tests in one table
ttest_sexTable <- map_df(list(ttest_sexPredemo11,ttest_sexEmpemo11,
ttest_sexPredemo13,ttest_sexEmpemo13,
ttest_sexPredcog11, ttest_sexEmpcog11,
ttest_sexPredcog13, ttest_sexEmpcog13), tidy)
ttest_sexTable_edit <- ttest_sexTable[c("estimate1", "estimate2","statistic","parameter","p.value")]
colnames(ttest_sexTable_edit) <- c("Mean males","Mean females", "t value","df","p-value")
ttest_sexTable_edit[,1:4] <- round(ttest_sexTable_edit[,1:4],2)
ttest_sexTable_edit[,5] <- round(ttest_sexTable_edit[,5],3)
#add effect size
#change the direction according to the t-test results when relevant
#because the cohensD function does not show the effect's direction
ttest_sexTable_edit$cohenD <- NA
ttest_sexTable_edit$cohenD[1] <- 0-round(cohensD(predicted_emotional_11~sex, data=D),2)
ttest_sexTable_edit$cohenD[2] <- 0-round(cohensD(EMPQ_emotional_11~sex, data=D),2)
ttest_sexTable_edit$cohenD[3] <- 0-round(cohensD(predicted_emotional_13~sex, data=D),2)
ttest_sexTable_edit$cohenD[4] <- 0-round(cohensD(EMPQ_emotional_13~sex, data=D),2)
ttest_sexTable_edit$cohenD[5] <- 0-round(cohensD(predicted_cognitive_11~sex, data=D),2)
ttest_sexTable_edit$cohenD[6] <- 0-round(cohensD(EMPQ_cognitive_11~sex, data=D),2)
ttest_sexTable_edit$cohenD[7] <- 0-round(cohensD(predicted_cognitive_13~sex, data=D),2)
ttest_sexTable_edit$cohenD[8] <- 0-round(cohensD(EMPQ_cognitive_13~sex, data=D),2)
#add sd
ttest_sexTable_edit$sdBoys <- NA
ttest_sexTable_edit$sdGirls <- NA
ttest_sexTable_edit$sdBoys[1] <- round((aggregate(D$predicted_emotional_11~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[2] <- round((aggregate(D$EMPQ_emotional_11~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[3] <- round((aggregate(D$predicted_emotional_13~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[4] <- round((aggregate(D$EMPQ_emotional_13~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[5] <- round((aggregate(D$predicted_cognitive_11~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[6] <- round((aggregate(D$EMPQ_cognitive_11~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[7] <- round((aggregate(D$predicted_cognitive_13~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdBoys[8] <- round((aggregate(D$EMPQ_cognitive_13~D$sex, FUN = sd)[1,2]),2)
ttest_sexTable_edit$sdGirls[1] <- round((aggregate(D$predicted_emotional_11~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[2] <- round((aggregate(D$EMPQ_emotional_11~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[3] <- round((aggregate(D$predicted_emotional_13~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[4] <- round((aggregate(D$EMPQ_emotional_13~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[5] <- round((aggregate(D$predicted_cognitive_11~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[6] <- round((aggregate(D$EMPQ_cognitive_11~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[7] <- round((aggregate(D$predicted_cognitive_13~D$sex, FUN = sd)[2,2]),2)
ttest_sexTable_edit$sdGirls[8] <- round((aggregate(D$EMPQ_cognitive_13~D$sex, FUN = sd)[2,2]),2)
#edit labels
ttest_sexTable_edit$`Mean males` <- paste(as.character(ttest_sexTable_edit$`Mean males`),"(",
as.character (ttest_sexTable_edit$sdBoys),")")
ttest_sexTable_edit$`Mean females` <- paste(as.character(ttest_sexTable_edit$`Mean females`),"(",
as.character (ttest_sexTable_edit$sdGirls),")")
ttest_sexTable_edit$`t value` <- paste(as.character(ttest_sexTable_edit$`t value`),"(",
as.character (ttest_sexTable_edit$df),")")
#add stars indicating significance
for (i in 1:8) { ifelse(ttest_sexTable_edit$`p-value`[i]<.0001,
ttest_sexTable_edit$`t value`[i]<- paste0 (ttest_sexTable_edit$`t value`[i],"***"),
ifelse(ttest_sexTable_edit$`p-value`[i]<.01,
ttest_sexTable_edit$`t value`[i]<- paste0 (ttest_sexTable_edit$`t value`[i],"**"),
ttest_sexTable_edit$`t value`[i]<- ttest_sexTable_edit$`t value`[i]))}
df_sex <- apply(ttest_sexTable_edit[,c(1,2,3,6)],2,as.character)
#export table to csv
write.csv(df_sex, file= "ttest_sex.csv", row.names = F)
# at age 13 time-point, some children received a shorter battery that did not include
# the emotion recognition test to increase participation rate.
# as a first step, conduct t-test only for the difference between the short and long online versions:
t.test(predicted_emotional_13~OnlineManual13, data=D[D$OnlineManual13<=1,])
t.test(EMPQ_emotional_13~OnlineManual13, data=D[D$OnlineManual13<=1,])
t.test(predicted_cognitive_13~OnlineManual13, data=D[D$OnlineManual13<=1,])
t.test(EMPQ_cognitive_13~OnlineManual13, data=D[D$OnlineManual13<=1,])
#because there is no significant difference, unite the two online groups
D$OnlineManual13_2G <- D$OnlineManual13
D$OnlineManual13_2G[D$OnlineManual13==0] <-"online"
D$OnlineManual13_2G[D$OnlineManual13==1] <-"online"
D$OnlineManual13_2G[D$OnlineManual13==2] <-"paper"
#perform separate t-test for each study outcome
ttest_sourcePredemo11 <- t.test(predicted_emotional_11~OnlineManual, data=D)
ttest_sourceEmpemo11 <-t.test(EMPQ_emotional_11~ OnlineManual, data=D)
ttest_sourcePredcog11 <- t.test(predicted_cognitive_11~ OnlineManual, data=D)
ttest_sourceEmpcog11 <- t.test(EMPQ_cognitive_11~ OnlineManual, data=D)
ttest_sourcePredemo13 <- t.test(predicted_emotional_13~ OnlineManual13_2G, data=D)
ttest_sourceEmpemo13 <-t.test(EMPQ_emotional_13~ OnlineManual13_2G, data=D)
ttest_sourcePredcog13 <- t.test(predicted_cognitive_13~ OnlineManual13_2G, data=D)
ttest_sourceEmpcog13 <- t.test(EMPQ_cognitive_13~ OnlineManual13_2G, data=D)
#enter all tests in one table
ttest_sourceTable <- map_df(list(ttest_sourcePredemo11,ttest_sourceEmpemo11,
ttest_sourcePredemo13,ttest_sourceEmpemo13,
ttest_sourcePredcog11, ttest_sourceEmpcog11,
ttest_sourcePredcog13, ttest_sourceEmpcog13), tidy)
ttest_sourceTable_edit <- ttest_sourceTable[c("estimate1", "estimate2","statistic","parameter","p.value")]
colnames(ttest_sourceTable_edit) <- c("MeanOnline","MeanPaper", "t_value","df","p_value")
ttest_sourceTable_edit[,1:4] <- round(ttest_sourceTable_edit[,1:4],2)
ttest_sourceTable_edit[,5] <- round(ttest_sourceTable_edit[,5],3)
#add effect size
#change the direction according to the t-test results when relevant
#because the cohensD function does not show the effect's direction
ttest_sourceTable_edit$cohenD <- NA
ttest_sourceTable_edit$cohenD[1] <- 0-round(cohensD(predicted_emotional_11~OnlineManual, data=D),2)
ttest_sourceTable_edit$cohenD[2] <- 0-round(cohensD(EMPQ_emotional_11~OnlineManual, data=D),2)
ttest_sourceTable_edit$cohenD[3] <- round(cohensD(predicted_emotional_13~OnlineManual13_2G, data=D),2)
ttest_sourceTable_edit$cohenD[4] <- 0-round(cohensD(EMPQ_emotional_13~OnlineManual13_2G, data=D),2)
ttest_sourceTable_edit$cohenD[5] <- 0-round(cohensD(predicted_cognitive_11~OnlineManual, data=D),2)
ttest_sourceTable_edit$cohenD[6] <- 0-round(cohensD(EMPQ_cognitive_11~OnlineManual, data=D),2)
ttest_sourceTable_edit$cohenD[7] <- round(cohensD(predicted_cognitive_13~OnlineManual13_2G, data=D),2)
ttest_sourceTable_edit$cohenD[8] <- round(cohensD(EMPQ_cognitive_13~OnlineManual13_2G, data=D),2)
#add sd
ttest_sourceTable_edit$sdOnline <- NA
ttest_sourceTable_edit$sdPaper <- NA
ttest_sourceTable_edit$sdOnline[1] <- round((aggregate(D$predicted_emotional_11~D$OnlineManual, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[2] <- round((aggregate(D$EMPQ_emotional_11~D$OnlineManual, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[3] <- round((aggregate(D$predicted_emotional_13~D$OnlineManual13_2G, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[4] <- round((aggregate(D$EMPQ_emotional_13~D$OnlineManual13_2G, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[5] <- round((aggregate(D$predicted_cognitive_11~D$OnlineManual, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[6] <- round((aggregate(D$EMPQ_cognitive_11~D$OnlineManual, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[7] <- round((aggregate(D$predicted_cognitive_13~D$OnlineManual13_2G, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdOnline[8] <- round((aggregate(D$EMPQ_cognitive_13~D$OnlineManual13_2G, FUN = sd)[1,2]),2)
ttest_sourceTable_edit$sdPaper[1] <- round((aggregate(D$predicted_emotional_11~D$OnlineManual, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[2] <- round((aggregate(D$EMPQ_emotional_11~D$OnlineManual, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[3] <- round((aggregate(D$predicted_emotional_13~D$OnlineManual13_2G, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[4] <- round((aggregate(D$EMPQ_emotional_13~D$OnlineManual13_2G, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[5] <- round((aggregate(D$predicted_cognitive_11~D$OnlineManual, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[6] <- round((aggregate(D$EMPQ_cognitive_11~D$OnlineManual, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[7] <- round((aggregate(D$predicted_cognitive_13~D$OnlineManual13_2G, FUN = sd)[2,2]),2)
ttest_sourceTable_edit$sdPaper[8] <- round((aggregate(D$EMPQ_cognitive_13~D$OnlineManual13_2G, FUN = sd)[2,2]),2)
#edit labels
ttest_sourceTable_edit$MeanOnline <- paste(as.character(ttest_sourceTable_edit$MeanOnline),"(",
as.character (ttest_sourceTable_edit$sdOnline),")")
ttest_sourceTable_edit$MeanPaper <- paste(as.character(ttest_sourceTable_edit$MeanPaper),"(",
as.character (ttest_sourceTable_edit$sdPaper),")")
ttest_sourceTable_edit$t_value <- paste(as.character(ttest_sourceTable_edit$t_value),"(",
as.character (ttest_sourceTable_edit$df),")")
#add stars that indicate significance
for (i in 1:8) { ifelse(ttest_sourceTable_edit$p_value[i]<.001,
ttest_sourceTable_edit$t_value[i]<- paste0 (ttest_sourceTable_edit$t_value[i],"***"),
ifelse(ttest_sourceTable_edit$p_value[i]<.01,
ttest_sourceTable_edit$t_value[i]<- paste0 (ttest_sourceTable_edit$t_value[i],"**"),
ifelse(ttest_sourceTable_edit$p_value[i]<.05,
ttest_sourceTable_edit$t_value[i]<- paste0 (ttest_sourceTable_edit$t_value[i],"*"),
ttest_sourceTable_edit$t_value[i]<- ttest_sourceTable_edit$t_value[i])))}
df_source <- apply(ttest_sourceTable_edit[,c(1,2,3,6)],2,as.character)
#export table to csv
write.csv(df_source, file= "ttest_source.csv", row.names = F)
#import participants age in each wave
participants_ages11 <- read.csv ("~/Documents/projects/Empathy-Personality-Adolecence/OSF/data/Age11_participants_age.csv")
participants_ages13 <- read.csv ("~/Documents/projects/Empathy-Personality-Adolecence/OSF/data/Age13_participants_age.csv")
D<- merge(x=D, y=participants_ages11, by=c("ifam","ID"), all.x=T, all.y=F )
D<- merge(x=D, y=participants_ages13, by=c("ifam","ID"), all.x=T, all.y=F )
#examine the correlations
col=colnames(D)
relvar_agecor11 <- c(which (col=="Age11"),
which (col=="predicted_emotional_11"),which(col=="predicted_cognitive_11"),
which (col=="EMPQ_emotional_11"),which(col=="EMPQ_cognitive_11"))
apa.cor.table(D[,relvar_agecor11])
relvar_agecor13 <- c(which (col=="Age13"),
which (col=="predicted_emotional_13"),which(col=="predicted_cognitive_13"),
which (col=="EMPQ_emotional_13"),which(col=="EMPQ_cognitive_13"))
apa.cor.table(D[,relvar_agecor13])
#creating a matrix to store the data
col <- colnames(D)
relvar <- c(which (col=="EMPQ_emotional_11"),which(col=="EMPQ_cognitive_11"),
which(col=="predicted_emotional_11"), which(col=="predicted_cognitive_11"),
which (col=="EMPQ_emotional_13"),which(col=="EMPQ_cognitive_13"),
which(col=="predicted_emotional_13"), which(col=="predicted_cognitive_13"))
residvec <- paste0(colnames(D[,relvar]),"r")
resid.matrix <- as.data.frame(matrix(data= NA, nrow =nrow(D),ncol =length(relvar)))
colnames(resid.matrix) <-residvec
#creating the residual scores
for (i in 1:length(relvar)) {
reg <- lm(D[,relvar[i]]~sex, data=D, na.action=na.exclude)
resid.matrix[,i] <-resid(reg)
}
D <-cbind(D,resid.matrix)
View(D)
cor.test(D$predicted_emotional_11,D$predicted_emotional_11r)
cor.test(D$predicted_cognitive_11,D$predicted_cognitivel_11r)
cor.test(D$predicted_cognitive_11,D$predicted_cognitive_11r)
#Converting dataset to wide format
DWide <- reshape(D, timevar = "ID", idvar = "ifam", direction = "wide",
v.names = colnames(D[-c(1,2,which(colnames(D)=="zygosity"))]))
newnames <- gsub(x=colnames(DWide),pattern="[.]", replacement="_")
newnames <- gsub(x=newnames,pattern="_4", replacement="_2")
newnames <- gsub(x=newnames,pattern="_11", replacement="11")
newnames <- gsub(x=newnames,pattern="_13", replacement="13")
colnames(DWide) <- newnames
#create different datasets for the 3 zygosity groups
Dmz  = subset(DWide, zygosity == 1)
Ddzs = subset(DWide, zygosity == 2)
Ddzo = subset(DWide, zygosity == 3)
#computing ICC between twins separately for each zygosity group
col <- colnames(DWide)
#age 11
icc_EMPemo_MZ11  <- icc(Dmz[,c(which(col=="EMPQ_emotional11_1"),which(col=="EMPQ_emotional11_2"))],model="twoway", unit="single")
icc_EMPemo_DZS11 <- icc(Ddzs[,c(which(col=="EMPQ_emotional11_1"),which(col=="EMPQ_emotional11_2"))],model="twoway", unit="single")
icc_EMPemo_DZO11 <- icc(Ddzo[,c(which(col=="EMPQ_emotional11_1"),which(col=="EMPQ_emotional11_2"))],model="twoway", unit="single")
icc_EMPcog_MZ11  <- icc(Dmz[,c(which(col=="EMPQ_cognitive11_1"),which(col=="EMPQ_cognitive11_2"))],model="twoway", unit="single")
icc_EMPcog_DZS11 <-icc(Ddzs[,c(which(col=="EMPQ_cognitive11_1"),which(col=="EMPQ_cognitive11_2"))],model="twoway", unit="single")
icc_EMPcog_DZO11 <-icc(Ddzo[,c(which(col=="EMPQ_cognitive11_1"),which(col=="EMPQ_cognitive11_2"))],model="twoway", unit="single")
icc_PREDemo_MZ11 <-icc(Dmz[,c(which(col=="predicted_emotional11_1"),which(col=="predicted_emotional11_2"))],model="twoway", unit="single")
icc_PREDemo_DZS11 <-icc(Ddzs[,c(which(col=="predicted_emotional11_1"),which(col=="predicted_emotional11_2"))],model="twoway", unit="single")
icc_PREDemo_DZO11 <-icc(Ddzo[,c(which(col=="predicted_emotional11_1"),which(col=="predicted_emotional11_2"))],model="twoway", unit="single")
icc_PREDcog_MZ11  <- icc(Dmz[,c(which(col=="predicted_cognitive11_1"),which(col=="predicted_cognitive11_2"))],model="twoway", unit="single")
icc_PREDcog_DZS11 <- icc(Ddzs[,c(which(col=="predicted_cognitive11_1"),which(col=="predicted_cognitive11_2"))],model="twoway", unit="single")
icc_PREDcog_DZO11 <- icc(Ddzo[,c(which(col=="predicted_cognitive11_1"),which(col=="predicted_cognitive11_2"))],model="twoway", unit="single")
#fisher Z comparison between DZs and DZo ICC
fishZ_empEmo11  <- r.test(n=icc_EMPemo_DZS11$subjects, n2=icc_EMPemo_DZO11$subjects,r12=icc_EMPemo_DZS11$value,  r34=icc_EMPemo_DZO11$value)
fishZ_empCog11  <- r.test(n=icc_EMPcog_DZS11$subjects, n2=icc_EMPcog_DZO11$subjects,r12=icc_EMPcog_DZS11$value,  r34=icc_EMPcog_DZO11$value)
fishZ_predEmo11 <- r.test(n=icc_PREDemo_DZS11$subjects, n2=icc_PREDemo_DZO11$subjects,r12=icc_PREDemo_DZS11$value,  r34=icc_PREDemo_DZO11$value)
fishZ_predCog11 <- r.test(n=icc_PREDcog_DZS11$subjects, n2=icc_PREDcog_DZO11$subjects,r12=icc_PREDcog_DZS11$value,  r34=icc_PREDcog_DZO11$value)
#age 13
icc_EMPemo_MZ13  <- icc(Dmz[,c(which(col=="EMPQ_emotional13_1"),which(col=="EMPQ_emotional13_2"))],model="twoway", unit="single")
icc_EMPemo_DZS13 <- icc(Ddzs[,c(which(col=="EMPQ_emotional13_1"),which(col=="EMPQ_emotional13_2"))],model="twoway", unit="single")
icc_EMPemo_DZO13 <- icc(Ddzo[,c(which(col=="EMPQ_emotional13_1"),which(col=="EMPQ_emotional13_2"))],model="twoway", unit="single")
icc_EMPcog_MZ13  <- icc(Dmz[,c(which(col=="EMPQ_cognitive13_1"),which(col=="EMPQ_cognitive13_2"))],model="twoway", unit="single")
icc_EMPcog_DZS13 <-icc(Ddzs[,c(which(col=="EMPQ_cognitive13_1"),which(col=="EMPQ_cognitive13_2"))],model="twoway", unit="single")
icc_EMPcog_DZO13 <-icc(Ddzo[,c(which(col=="EMPQ_cognitive13_1"),which(col=="EMPQ_cognitive13_2"))],model="twoway", unit="single")
icc_PREDemo_MZ13 <-icc(Dmz[,c(which(col=="predicted_emotional13_1"),which(col=="predicted_emotional13_2"))],model="twoway", unit="single")
icc_PREDemo_DZS13 <-icc(Ddzs[,c(which(col=="predicted_emotional13_1"),which(col=="predicted_emotional13_2"))],model="twoway", unit="single")
icc_PREDemo_DZO13 <-icc(Ddzo[,c(which(col=="predicted_emotional13_1"),which(col=="predicted_emotional13_2"))],model="twoway", unit="single")
icc_PREDcog_MZ13  <- icc(Dmz[,c(which(col=="predicted_cognitive13_1"),which(col=="predicted_cognitive13_2"))],model="twoway", unit="single")
icc_PREDcog_DZS13 <- icc(Ddzs[,c(which(col=="predicted_cognitive13_1"),which(col=="predicted_cognitive13_2"))],model="twoway", unit="single")
icc_PREDcog_DZO13 <- icc(Ddzo[,c(which(col=="predicted_cognitive13_1"),which(col=="predicted_cognitive13_2"))],model="twoway", unit="single")
#fisher Z comparison between DZS and DZo ICC
fishZ_empEmo13  <- r.test(n=icc_EMPemo_DZS13$subjects, n2=icc_EMPemo_DZO13$subjects,r12=icc_EMPemo_DZS13$value,  r34=icc_EMPemo_DZO13$value)
fishZ_empCog13  <- r.test(n=icc_EMPcog_DZS13$subjects, n2=icc_EMPcog_DZO13$subjects,r12=icc_EMPcog_DZS13$value,  r34=icc_EMPcog_DZO13$value)
fishZ_predEmo13 <- r.test(n=icc_PREDemo_DZS13$subjects, n2=icc_PREDemo_DZO13$subjects,r12=icc_PREDemo_DZS13$value,  r34=icc_PREDemo_DZO13$value)
fishZ_predCog13 <- r.test(n=icc_PREDcog_DZS13$subjects, n2=icc_PREDcog_DZO13$subjects,r12=icc_PREDcog_DZS13$value,  r34=icc_PREDcog_DZO13$value)
#planting Fisher Z results in a table
#when relevant, the direction of the Z-value was manually changed in the word document, not here
fishZ_table <- matrix(nrow=8,ncol=4)
fishZ_table[,1] <- c("Emotional empathic personality disposition 11","Emotional empathy 11",
"Emotional empathic personality disposition 13","Emotional empathy 13",
"Cognitive empathic personality disposition 11","Cognitive empathy 11",
"Cognitive empathic personality disposition 13","Cognitive empathy 13")
fishZ_table[1,2] <- paste(as.character(round(icc_PREDemo_DZS11$value,2)),"[",
as.character(round(icc_PREDemo_DZS11$lbound,2)),"-",
as.character(round(icc_PREDemo_DZS11$ubound,2)),"]")
fishZ_table[2,2] <- paste(as.character(round(icc_EMPemo_DZS11$value,2)),"[",
as.character(round(icc_EMPemo_DZS11$lbound,2)),"-",
as.character(round(icc_EMPemo_DZS11$ubound,2)),"]")
fishZ_table[3,2] <- paste(as.character(round(icc_PREDemo_DZS13$value,2)),"[",
as.character(round(icc_PREDemo_DZS13$lbound,2)),"-",
as.character(round(icc_PREDemo_DZS13$ubound,2)),"]")
fishZ_table[4,2] <- paste(as.character(round(icc_EMPemo_DZS13$value,2)),"[",
as.character(round(icc_EMPemo_DZS13$lbound,2)),"-",
as.character(round(icc_EMPemo_DZS13$ubound,2)),"]")
fishZ_table[5,2] <- paste(as.character(round(icc_PREDcog_DZS11$value,2)),"[",
as.character(round(icc_PREDcog_DZS11$lbound,2)),"-",
as.character(round(icc_PREDcog_DZS11$ubound,2)),"]")
fishZ_table[6,2] <- paste(as.character(round(icc_EMPcog_DZS11$value,2)),"[",
as.character(round(icc_EMPcog_DZS11$lbound,2)),"-",
as.character(round(icc_EMPcog_DZS11$ubound,2)),"]")
fishZ_table[7,2] <- paste(as.character(round(icc_PREDcog_DZS13$value,2)),"[",
as.character(round(icc_PREDcog_DZS13$lbound,2)),"-",
as.character(round(icc_PREDcog_DZS13$ubound,2)),"]")
fishZ_table[8,2] <- paste(as.character(round(icc_EMPcog_DZS13$value,2)),"[",
as.character(round(icc_EMPcog_DZS13$lbound,2)),"-",
as.character(round(icc_EMPcog_DZS13$ubound,2)),"]")
fishZ_table[1,3] <- paste(as.character(round(icc_PREDemo_DZO11$value,2)),"[",
as.character(round(icc_PREDemo_DZO11$lbound,2)),"-",
as.character(round(icc_PREDemo_DZO11$ubound,2)),"]")
fishZ_table[2,3] <- paste(as.character(round(icc_EMPemo_DZO11$value,2)),"[",
as.character(round(icc_EMPemo_DZO11$lbound,2)),"-",
as.character(round(icc_EMPemo_DZO11$ubound,2)),"]")
fishZ_table[3,3] <- paste(as.character(round(icc_PREDemo_DZO13$value,2)),"[",
as.character(round(icc_PREDemo_DZO13$lbound,2)),"-",
as.character(round(icc_PREDemo_DZO13$ubound,2)),"]")
fishZ_table[4,3] <- paste(as.character(round(icc_EMPemo_DZO13$value,2)),"[",
as.character(round(icc_EMPemo_DZO13$lbound,2)),"-",
as.character(round(icc_EMPemo_DZO13$ubound,2)),"]")
fishZ_table[5,3] <- paste(as.character(round(icc_PREDcog_DZO11$value,2)),"[",
as.character(round(icc_PREDcog_DZO11$lbound,2)),"-",
as.character(round(icc_PREDcog_DZO11$ubound,2)),"]")
fishZ_table[6,3] <- paste(as.character(round(icc_EMPcog_DZO11$value,2)),"[",
as.character(round(icc_EMPcog_DZO11$lbound,2)),"-",
as.character(round(icc_EMPcog_DZO11$ubound,2)),"]")
fishZ_table[7,3] <- paste(as.character(round(icc_PREDcog_DZO13$value,2)),"[",
as.character(round(icc_PREDcog_DZO13$lbound,2)),"-",
as.character(round(icc_PREDcog_DZO13$ubound,2)),"]")
fishZ_table[8,3] <- paste(as.character(round(icc_EMPcog_DZO13$value,2)),"[",
as.character(round(icc_EMPcog_DZO13$lbound,2)),"-",
as.character(round(icc_EMPcog_DZO13$ubound,2)),"]")
fishZ_table[1,4] <- round(fishZ_predEmo11$z,2)
fishZ_table[2,4] <- round(fishZ_empEmo11$z,2)
fishZ_table[3,4] <- round(fishZ_predEmo13$z,2)
fishZ_table[4,4] <- round(fishZ_empEmo13$z,2)
fishZ_table[5,4] <- round(fishZ_predCog11$z,2)
fishZ_table[6,4] <- round(fishZ_empCog11$z,2)
fishZ_table[7,4] <- round(fishZ_predCog13$z,2)
fishZ_table[8,4] <- round(fishZ_empCog13$z,2)
colnames(fishZ_table) <- c("variable","DZ-same sex", "DZ-opposite sex","Z value")
write.csv(fishZ_table, file= "fisherZ_DZ.csv", row.names = F)
DWide$zygosity_2G <- DWide$zygosity
DWide$zygosity_2G[DWide$zygosity==1] <-"MZ"
DWide$zygosity_2G[DWide$zygosity==2] <-"DZ"
DWide$zygosity_2G[DWide$zygosity==3] <-"DZ"
col <- colnames(DWide)
icc_PREDemo_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_emotional11r_1"),which(col=="predicted_emotional11r_2"))],model="twoway", unit="single")
icc_PREDemo_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_emotional11r_1"),which(col=="predicted_emotional11r_2"))],model="twoway", unit="single")
icc_EMPemo_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_emotional11r_1"),which(col=="EMPQ_emotional11r_2"))],model="twoway", unit="single")
icc_EMPemo_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_emotional11r_1"),which(col=="EMPQ_emotional11r_2"))],model="twoway", unit="single")
icc_PREDemo_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_emotional13r_1"),which(col=="predicted_emotional13r_2"))],model="twoway", unit="single")
icc_PREDemo_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_emotional13r_1"),which(col=="predicted_emotional13r_2"))],model="twoway", unit="single")
icc_EMPemo_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_emotional13r_1"),which(col=="EMPQ_emotional13r_2"))],model="twoway", unit="single")
icc_EMPemo_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_emotional13r_1"),which(col=="EMPQ_emotional13r_2"))],model="twoway", unit="single")
icc_PREDcog_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_cognitive11r_1"),which(col=="predicted_cognitive11r_2"))],model="twoway", unit="single")
icc_PREDcog_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_cognitive11r_1"),which(col=="predicted_cognitive11r_2"))],model="twoway", unit="single")
icc_EMPcog_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_cognitive11r_1"),which(col=="EMPQ_cognitive11r_2"))],model="twoway", unit="single")
icc_EMPcog_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_cognitive11r_1"),which(col=="EMPQ_cognitive11r_2"))],model="twoway", unit="single")
icc_PREDcog_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_cognitive13r_1"),which(col=="predicted_cognitive13r_2"))],model="twoway", unit="single")
icc_PREDcog_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_cognitive13r_1"),which(col=="predicted_cognitive13r_2"))],model="twoway", unit="single")
icc_EMPcog_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_cognitive13r_1"),which(col=="EMPQ_cognitive13r_2"))],model="twoway", unit="single")
icc_EMPcog_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_cognitive13r_1"),which(col=="EMPQ_cognitive13r_2"))],model="twoway", unit="single")
icc_EMPemo_MZ11
icc_PREDemo_MZ11
library(umx)
#checking raw correlations
rawDescript_r_DZunite<- umxSummarizeTwinData(DWide,
selVars=c("EMPQ_emotional11r","EMPQ_cognitive11r","predicted_emotional11r","predicted_cognitive11r",
"EMPQ_emotional13r","EMPQ_cognitive13r","predicted_emotional13r","predicted_cognitive13r" ),
zyg="zygosity_2G",
sep="_",MZ="MZ", DZ="DZ")
col <- colnames(DWide)
icc_PREDemo_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_emotional11r_1"),which(col=="predicted_emotional11r_2"))],model="twoway", unit="single")
icc_PREDemo_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_emotional11r_1"),which(col=="predicted_emotional11r_2"))],model="twoway", unit="single")
icc_EMPemo_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_emotional11r_1"),which(col=="EMPQ_emotional11r_2"))],model="twoway", unit="single")
icc_EMPemo_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_emotional11r_1"),which(col=="EMPQ_emotional11r_2"))],model="twoway", unit="single")
icc_PREDemo_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_emotional13r_1"),which(col=="predicted_emotional13r_2"))],model="twoway", unit="single")
icc_PREDemo_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_emotional13r_1"),which(col=="predicted_emotional13r_2"))],model="twoway", unit="single")
icc_EMPemo_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_emotional13r_1"),which(col=="EMPQ_emotional13r_2"))],model="twoway", unit="single")
icc_EMPemo_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_emotional13r_1"),which(col=="EMPQ_emotional13r_2"))],model="twoway", unit="single")
icc_PREDcog_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_cognitive11r_1"),which(col=="predicted_cognitive11r_2"))],model="twoway", unit="single")
icc_PREDcog_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_cognitive11r_1"),which(col=="predicted_cognitive11r_2"))],model="twoway", unit="single")
icc_EMPcog_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_cognitive11r_1"),which(col=="EMPQ_cognitive11r_2"))],model="twoway", unit="single")
icc_EMPcog_DZ11r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_cognitive11r_1"),which(col=="EMPQ_cognitive11r_2"))],model="twoway", unit="single")
icc_PREDcog_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_cognitive13r_1"),which(col=="predicted_cognitive13r_2"))],model="twoway", unit="single")
icc_PREDcog_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="predicted_cognitive13r_1"),which(col=="predicted_cognitive13r_2"))],model="twoway", unit="single")
icc_EMPcog_MZ13r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="EMPQ_cognitive13r_1"),which(col=="EMPQ_cognitive13r_2"))],model="twoway", unit="single")
icc_EMPcog_DZ13r  <- icc(DWide[DWide$zygosity_2G=="DZ",c(which(col=="EMPQ_cognitive13r_1"),which(col=="EMPQ_cognitive13r_2"))],model="twoway", unit="single")
icc_PREDemo_DZ11r
?icc
icc_PREDemo_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_emotional11r_1"),which(col=="predicted_emotional11r_2"))])
icc_PREDemo_MZ11r
icc_PREDemo_MZ11r  <- icc(DWide[DWide$zygosity_2G=="MZ",c(which(col=="predicted_emotional11r_1"),which(col=="predicted_emotional11r_2"))],model="twoway", unit="single")
icc_PREDemo_MZ11r
